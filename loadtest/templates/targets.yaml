{{- if eq .Values.backend.minio "true" }}
---
apiVersion: triliovault.trilio.io/v1
kind: Target
metadata:
  name: minio-target-1-{{ .Values.username }}
  namespace: {{ .Values.namespace }}-{{ .Values.username }}
spec:
  nfsCredentials:
    nfsExport: ''
  objectStoreCredentials:
    bucketName: s3-{{ .Values.username }}
    url: 'http://minio.minio.svc.cluster.local:9000/'
    skipCertVerification: true
    credentialSecret:
      apiVersion: v1
      kind: Secret
      name: minio-s3-login
      namespace: {{ .Values.namespace }}-{{ .Values.username }}
  type: ObjectStore
  vendor: MinIO
{{- end }}
{{- if eq .Values.backend.odf "true" }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: odf-target-job-{{ .Values.username }}
  namespace: default
  annotations:
    argocd.argoproj.io/sync-wave: "3"
spec:
  template:
    spec:
      restartPolicy: Never
      serviceAccountName: odf-secret-job
      containers:
      - name: odf-target-patch-{{ .Values.username }}
        image: registry.redhat.io/openshift4/ose-cli:latest
        command:
        - /bin/sh
        - -c
        - |

          NAMESPACE={{ .Values.namespace }}-{{ .Values.username }}
          BUCKET_NAME=$(oc get -n $NAMESPACE obc obc-trilio-bucket-odf -o jsonpath='{.spec.bucketName}')

          cat << EOF | oc apply -f -
          apiVersion: triliovault.trilio.io/v1
          kind: Target
          metadata:
            name: target-odf-s3-{{ .Values.username }}
            namespace: $NAMESPACE
          spec:
            nfsCredentials:
              nfsExport: ''
            objectStoreCredentials:
              skipCertVerification: true
              bucketName: ${BUCKET_NAME}
              url: 'https://s3.openshift-storage.svc:443'
              credentialSecret:
                apiVersion: v1
                kind: Secret
                name: target-trilio-odf-s3
                namespace: $NAMESPACE
            type: ObjectStore
            vendor: Other
          EOF

{{- end }}
