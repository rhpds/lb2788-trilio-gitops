
{{- with .Values.vms }}
---
apiVersion: v1
kind: Namespace
metadata:
  name: {{ .namespace }}
{{- if .label }}
  labels:
{{ .label | indent 4 }}
{{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: datavolume-allow-clone-sa-default
  namespace: default
subjects:
- kind: ServiceAccount
  name: default
  namespace: {{ .namespace }}
roleRef:
  kind: ClusterRole
  name: datavolume-cloner
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: admin
  namespace: {{ .namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: admin
{{- $max_vms := ( add ( int .count ) 1 ) }}
{{- range $vm_index := untilStep 1 ( int $max_vms ) 1 }}
{{- if eq $.Values.linux "true" }}
---
apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  name: linux-vm
  namespace: {{ $.Values.vms.namespace }}
  labels:
    app.kubernetes.io/name: linux-vm
  annotations:
    argocd.argoproj.io/sync-wave: "2"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  instancetype:
    name: u1.small
  preference:
    name: rhel.9
  runStrategy: Always
  template:
    metadata:
      labels:
        network.kubevirt.io/headlessService: headless
    spec:
      domain:
        devices:
          autoattachPodInterface: false
          interfaces:
          - name: default
            masquerade: {}
      networks:
        - name: default
          pod: {}
      subdomain: headless
      volumes:
      - name: rootdisk
        dataVolume:
          name: linux-vm
      - name: cloudinitdisk
        cloudInitNoCloud:
          userData: |-
            #cloud-config
            user: rhel
            password: openshift
            chpasswd:
              expire: false
            ssh_pwauth: true
      accessCredentials:
      - sshPublicKey:
          propagationMethod:
            noCloud: {}
          source:
            secret:
              secretName: linux-vm
  dataVolumeTemplates:
  - metadata:
      name: linux-vm
    spec:
      sourceRef:
        kind: DataSource
        name: rhel9
        namespace: openshift-virtualization-os-images
      storage:
        resources: {}
{{- end }}
{{- if eq $.Values.windows "true" }}
---
apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "4"
  labels:
    app: winweb01
    app.kubernetes.io/part-of: 3-Tier-App
    vm.kubevirt.io/template.revision: '1'
    vm.kubevirt.io/template.version: v0.25.0
  name: winweb01
  namespace: {{ $.Values.vms.namespace }}
spec:
  dataVolumeTemplates:
  - apiVersion: cdi.kubevirt.io/v1beta1
    kind: DataVolume
    metadata:
      name: winweb01-{{ $vm_index }}
    spec:
      source:
        snapshot:
          name: winweb01-volumesnapshot
          namespace: default
        # pvc:
        #   name: winweb01
        #   namespace: default
        # http:
        #   url: image url/winweb01.qcow2
      storage:
        resources:
          requests:
            storage: 90Gi
  runStrategy: {{ $.Values.vms.runStrategy }}
  template:
    metadata:
      labels:
        env: {{ $.Values.vms.route }}
    spec:
      terminationGracePeriodSeconds: 0
      domain:
        clock:
          timer:
            hpet:
              present: false
            hyperv: {}
            pit:
              tickPolicy: delay
            rtc:
              tickPolicy: catchup
          utc: {}
        cpu:
          cores: 1
          sockets: 2
          threads: 1
        devices:
          disks:
          - disk:
              bus: sata
            name: rootdisk
          inputs:
          - bus: usb
            name: tablet
            type: tablet
          interfaces:
          - masquerade: {}
            model: e1000e
            name: default
        features:
          acpi: {}
          apic: {}
          hyperv:
            frequencies: {}
            ipi: {}
            relaxed: {}
            reset: {}
            runtime: {}
            spinlocks:
              spinlocks: 8191
            synic: {}
            synictimer:
              direct: {}
            tlbflush: {}
            vapic: {}
            vpindex: {}
          smm:
            enabled: true
        firmware:
          bootloader:
            efi: {}
        machine:
          type: {{ $.Values.vms.machineType }}
        memory:
          guest: 2Gi
        resources:
          requests:
            memory: 2Gi
      evictionStrategy: {{ $.Values.vms.evictionStrategy }}
      networks:
      - name: default
        pod: {}
      volumes:
      - dataVolume:
          name: winweb01-{{ $vm_index }}
        name: rootdisk
{{- end }}
{{- end }}
{{- end }}
